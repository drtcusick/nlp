package com.asynchrony.nlp.sentiment;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import edu.stanford.nlp.sentiment.Evaluate;

public class CustomSentimentPipelineTest {

	private static final String SENTIMENT_NEUTRAL = "Neutral";
	private static final String SENTIMENT_NEGATIVE = "Negative";
	private static final String SENTIMENT_POSITIVE = "Positive";
	private static final String TEST_SENTENCE_POS[] = { 
			"During the meeting, Steve was extremely insightful in his explaination of grey matter.",
			"Steve is great" };
	private static final String TEST_SENTENCE_NEG[] = {
			"The new workstation had terrible graphics and my eyes hurt.",
			"I totally bombed my annual review and will get no cookies next year." };
	private static final String TEST_SENTENCE_NEUTRAL[] = {	
			"Arun is a bad name for testing this software."};
			
	
	private CustomSentimentPipeline testObject; 
	
	@Before
	public void setUp()
	{
		testObject = new CustomSentimentPipeline();
	}
	
	@Test
	public void testSentimentPipelineMainCode_Positive() throws Exception {
		String testCase[] = TEST_SENTENCE_POS;
		for (int i = 0; i < testCase.length; i++) {
			assertEquals("Test Case [" + i + "] = " + testCase[i], 
					SENTIMENT_POSITIVE, testObject.evaluateSentiment(testCase[i])[0]);
		}
	}
	
	@Test
	public void testSentimentPipelineMainCode_Negative() throws Exception {
		String testCase[] = TEST_SENTENCE_NEG;
		for (int i = 0; i < testCase.length; i++) {
			String[] sentiments = testObject.evaluateSentiment(testCase[i]);
			assertEquals("Test Case [" + i + "] = " + testCase[i], 
					SENTIMENT_NEGATIVE, sentiments[0]);
		}
	}
	
	@Test
	public void testSentimentPipelineMainCode_Neutral() throws Exception {
		String testCase[] = TEST_SENTENCE_NEUTRAL;
		for (int i = 0; i < testCase.length; i++) {
			assertEquals("Test Case [" + i + "] = " + testCase[i], 
					SENTIMENT_NEUTRAL, testObject.evaluateSentiment(testCase[i])[0]);
		}
	}
	
}
